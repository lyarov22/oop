8. Аналоговые часы

--activity_main.xml--
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <AnalogClock
        android:id="@+id/analogClock"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true" />

    <TextView
        android:id="@+id/dateView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/analogClock"
        android:layout_centerHorizontal="true"
        android:textSize="18sp"
        android:text="Дата"
        android:layout_marginTop="20dp"/>

    <TextView
        android:id="@+id/timeView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/dateView"
        android:layout_centerHorizontal="true"
        android:textSize="18sp"
        android:text="Время"
        android:layout_marginTop="10dp"/>
</RelativeLayout>



--MainActivity.java--
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <AnalogClock
        android:id="@+id/analogClock"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true" />

    <TextView
        android:id="@+id/dateView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/analogClock"
        android:layout_centerHorizontal="true"
        android:textSize="18sp"
        android:text="Дата"
        android:layout_marginTop="20dp"/>

    <TextView
        android:id="@+id/timeView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/dateView"
        android:layout_centerHorizontal="true"
        android:textSize="18sp"
        android:text="Время"
        android:layout_marginTop="10dp"/>
</RelativeLayout>



--CustomAnalogClock.java--
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.view.View;

import java.util.Calendar;

public class CustomAnalogClock extends View {

    private Paint paint;
    private RectF rect;
    private int width, height;
    private float radius;

    public CustomAnalogClock(Context context) {
        super(context);
        init();
    }

    public CustomAnalogClock(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public CustomAnalogClock(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init();
    }

    private void init() {
        paint = new Paint();
        rect = new RectF();
        paint.setAntiAlias(true);
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        width = w;
        height = h;
        radius = Math.min(w, h) / 2.0f - 20;
        rect.set(width / 2.0f - radius, height / 2.0f - radius, width / 2.0f + radius, height / 2.0f + radius);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        drawClockFace(canvas);
        drawClockHands(canvas);
        postInvalidateDelayed(1000);
    }

    private void drawClockFace(Canvas canvas) {
        paint.setStyle(Paint.Style.STROKE);
        paint.setStrokeWidth(5);
        paint.setColor(Color.BLACK);
        canvas.drawCircle(width / 2.0f, height / 2.0f, radius, paint);
    }

    private void drawClockHands(Canvas canvas) {
        Calendar calendar = Calendar.getInstance();
        float hour = calendar.get(Calendar.HOUR);
        float minute = calendar.get(Calendar.MINUTE);
        float second = calendar.get(Calendar.SECOND);

        // Draw hour hand
        paint.setStrokeWidth(8);
        paint.setColor(Color.BLACK);
        canvas.save();
        canvas.rotate(hour / 12.0f * 360.0f + minute / 60.0f * 30.0f, width / 2.0f, height / 2.0f);
        canvas.drawLine(width / 2.0f, height / 2.0f, width / 2.0f, height / 2.0f - radius / 2, paint);
        canvas.restore();

        // Draw minute hand
        paint.setStrokeWidth(6);
        canvas.save();
        canvas.rotate(minute / 60.0f * 360.0f, width / 2.0f, height / 2.0f);
        canvas.drawLine(width / 2.0f, height / 2.0f, width / 2.0f, height / 2.0f - radius * 0.75f, paint);
        canvas.restore();

        // Draw second hand
        paint.setStrokeWidth(4);
        paint.setColor(Color.RED);
        canvas.save();
        canvas.rotate(second / 60.0f * 360.0f, width / 2.0f, height / 2.0f);
        canvas.drawLine(width / 2.0f, height / 2.0f, width / 2.0f, height / 2.0f - radius, paint);
        canvas.restore();
    }
}
